#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BanDienThoai.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SalesPhoneManagement")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertADDRESSOFCUSTOMER(ADDRESSOFCUSTOMER instance);
    partial void UpdateADDRESSOFCUSTOMER(ADDRESSOFCUSTOMER instance);
    partial void DeleteADDRESSOFCUSTOMER(ADDRESSOFCUSTOMER instance);
    partial void InsertWAREHOUSERECEIPT(WAREHOUSERECEIPT instance);
    partial void UpdateWAREHOUSERECEIPT(WAREHOUSERECEIPT instance);
    partial void DeleteWAREHOUSERECEIPT(WAREHOUSERECEIPT instance);
    partial void InsertBILL(BILL instance);
    partial void UpdateBILL(BILL instance);
    partial void DeleteBILL(BILL instance);
    partial void InsertBRAND(BRAND instance);
    partial void UpdateBRAND(BRAND instance);
    partial void DeleteBRAND(BRAND instance);
    partial void InsertCAPACITY(CAPACITY instance);
    partial void UpdateCAPACITY(CAPACITY instance);
    partial void DeleteCAPACITY(CAPACITY instance);
    partial void InsertCOLOR(COLOR instance);
    partial void UpdateCOLOR(COLOR instance);
    partial void DeleteCOLOR(COLOR instance);
    partial void InsertCOMMENT(COMMENT instance);
    partial void UpdateCOMMENT(COMMENT instance);
    partial void DeleteCOMMENT(COMMENT instance);
    partial void InsertCUSTOMER(CUSTOMER instance);
    partial void UpdateCUSTOMER(CUSTOMER instance);
    partial void DeleteCUSTOMER(CUSTOMER instance);
    partial void InsertDETAILSBILL(DETAILSBILL instance);
    partial void UpdateDETAILSBILL(DETAILSBILL instance);
    partial void DeleteDETAILSBILL(DETAILSBILL instance);
    partial void InsertDETAILSPHONE(DETAILSPHONE instance);
    partial void UpdateDETAILSPHONE(DETAILSPHONE instance);
    partial void DeleteDETAILSPHONE(DETAILSPHONE instance);
    partial void InsertDETAILSWAREHOUSERECEIPT(DETAILSWAREHOUSERECEIPT instance);
    partial void UpdateDETAILSWAREHOUSERECEIPT(DETAILSWAREHOUSERECEIPT instance);
    partial void DeleteDETAILSWAREHOUSERECEIPT(DETAILSWAREHOUSERECEIPT instance);
    partial void InsertEMPLOYEE(EMPLOYEE instance);
    partial void UpdateEMPLOYEE(EMPLOYEE instance);
    partial void DeleteEMPLOYEE(EMPLOYEE instance);
    partial void InsertPHONE(PHONE instance);
    partial void UpdatePHONE(PHONE instance);
    partial void DeletePHONE(PHONE instance);
    partial void InsertRESPONECOMMENT(RESPONECOMMENT instance);
    partial void UpdateRESPONECOMMENT(RESPONECOMMENT instance);
    partial void DeleteRESPONECOMMENT(RESPONECOMMENT instance);
    partial void InsertSUPPLIER(SUPPLIER instance);
    partial void UpdateSUPPLIER(SUPPLIER instance);
    partial void DeleteSUPPLIER(SUPPLIER instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SalesPhoneManagementConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ADDRESSOFCUSTOMER> ADDRESSOFCUSTOMERs
		{
			get
			{
				return this.GetTable<ADDRESSOFCUSTOMER>();
			}
		}
		
		public System.Data.Linq.Table<WAREHOUSERECEIPT> WAREHOUSERECEIPTs
		{
			get
			{
				return this.GetTable<WAREHOUSERECEIPT>();
			}
		}
		
		public System.Data.Linq.Table<BILL> BILLs
		{
			get
			{
				return this.GetTable<BILL>();
			}
		}
		
		public System.Data.Linq.Table<BRAND> BRANDs
		{
			get
			{
				return this.GetTable<BRAND>();
			}
		}
		
		public System.Data.Linq.Table<CAPACITY> CAPACITies
		{
			get
			{
				return this.GetTable<CAPACITY>();
			}
		}
		
		public System.Data.Linq.Table<COLOR> COLORs
		{
			get
			{
				return this.GetTable<COLOR>();
			}
		}
		
		public System.Data.Linq.Table<COMMENT> COMMENTs
		{
			get
			{
				return this.GetTable<COMMENT>();
			}
		}
		
		public System.Data.Linq.Table<CUSTOMER> CUSTOMERs
		{
			get
			{
				return this.GetTable<CUSTOMER>();
			}
		}
		
		public System.Data.Linq.Table<DETAILSBILL> DETAILSBILLs
		{
			get
			{
				return this.GetTable<DETAILSBILL>();
			}
		}
		
		public System.Data.Linq.Table<DETAILSPHONE> DETAILSPHONEs
		{
			get
			{
				return this.GetTable<DETAILSPHONE>();
			}
		}
		
		public System.Data.Linq.Table<DETAILSWAREHOUSERECEIPT> DETAILSWAREHOUSERECEIPTs
		{
			get
			{
				return this.GetTable<DETAILSWAREHOUSERECEIPT>();
			}
		}
		
		public System.Data.Linq.Table<EMPLOYEE> EMPLOYEEs
		{
			get
			{
				return this.GetTable<EMPLOYEE>();
			}
		}
		
		public System.Data.Linq.Table<PHONE> PHONEs
		{
			get
			{
				return this.GetTable<PHONE>();
			}
		}
		
		public System.Data.Linq.Table<RESPONECOMMENT> RESPONECOMMENTs
		{
			get
			{
				return this.GetTable<RESPONECOMMENT>();
			}
		}
		
		public System.Data.Linq.Table<SUPPLIER> SUPPLIERs
		{
			get
			{
				return this.GetTable<SUPPLIER>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ADDRESSOFCUSTOMER")]
	public partial class ADDRESSOFCUSTOMER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _AddressOfCustomerID;
		
		private string _AparmentNo;
		
		private string _Street;
		
		private string _Ward;
		
		private string _District;
		
		private string _City;
		
		private string _Email;
		
		private EntitySet<BILL> _BILLs;
		
		private EntityRef<CUSTOMER> _CUSTOMER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAddressOfCustomerIDChanging(string value);
    partial void OnAddressOfCustomerIDChanged();
    partial void OnAparmentNoChanging(string value);
    partial void OnAparmentNoChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnWardChanging(string value);
    partial void OnWardChanged();
    partial void OnDistrictChanging(string value);
    partial void OnDistrictChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public ADDRESSOFCUSTOMER()
		{
			this._BILLs = new EntitySet<BILL>(new Action<BILL>(this.attach_BILLs), new Action<BILL>(this.detach_BILLs));
			this._CUSTOMER = default(EntityRef<CUSTOMER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressOfCustomerID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string AddressOfCustomerID
		{
			get
			{
				return this._AddressOfCustomerID;
			}
			set
			{
				if ((this._AddressOfCustomerID != value))
				{
					this.OnAddressOfCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._AddressOfCustomerID = value;
					this.SendPropertyChanged("AddressOfCustomerID");
					this.OnAddressOfCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AparmentNo", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string AparmentNo
		{
			get
			{
				return this._AparmentNo;
			}
			set
			{
				if ((this._AparmentNo != value))
				{
					this.OnAparmentNoChanging(value);
					this.SendPropertyChanging();
					this._AparmentNo = value;
					this.SendPropertyChanged("AparmentNo");
					this.OnAparmentNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ward", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string Ward
		{
			get
			{
				return this._Ward;
			}
			set
			{
				if ((this._Ward != value))
				{
					this.OnWardChanging(value);
					this.SendPropertyChanging();
					this._Ward = value;
					this.SendPropertyChanged("Ward");
					this.OnWardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_District", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string District
		{
			get
			{
				return this._District;
			}
			set
			{
				if ((this._District != value))
				{
					this.OnDistrictChanging(value);
					this.SendPropertyChanging();
					this._District = value;
					this.SendPropertyChanged("District");
					this.OnDistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					if (this._CUSTOMER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADDRESSOFCUSTOMER_BILL", Storage="_BILLs", ThisKey="AddressOfCustomerID", OtherKey="AddressOfCustomerID")]
		public EntitySet<BILL> BILLs
		{
			get
			{
				return this._BILLs;
			}
			set
			{
				this._BILLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_ADDRESSOFCUSTOMER", Storage="_CUSTOMER", ThisKey="Email", OtherKey="Email", IsForeignKey=true)]
		public CUSTOMER CUSTOMER
		{
			get
			{
				return this._CUSTOMER.Entity;
			}
			set
			{
				CUSTOMER previousValue = this._CUSTOMER.Entity;
				if (((previousValue != value) 
							|| (this._CUSTOMER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUSTOMER.Entity = null;
						previousValue.ADDRESSOFCUSTOMERs.Remove(this);
					}
					this._CUSTOMER.Entity = value;
					if ((value != null))
					{
						value.ADDRESSOFCUSTOMERs.Add(this);
						this._Email = value.Email;
					}
					else
					{
						this._Email = default(string);
					}
					this.SendPropertyChanged("CUSTOMER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BILLs(BILL entity)
		{
			this.SendPropertyChanging();
			entity.ADDRESSOFCUSTOMER = this;
		}
		
		private void detach_BILLs(BILL entity)
		{
			this.SendPropertyChanging();
			entity.ADDRESSOFCUSTOMER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WAREHOUSERECEIPT")]
	public partial class WAREHOUSERECEIPT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WarehouseReceiptID;
		
		private string _Datetimestamp;
		
		private System.Nullable<long> _Total;
		
		private System.Nullable<bool> _State;
		
		private string _EmployeeID;
		
		private string _SupplierID;
		
		private EntitySet<DETAILSWAREHOUSERECEIPT> _DETAILSWAREHOUSERECEIPTs;
		
		private EntityRef<EMPLOYEE> _EMPLOYEE;
		
		private EntityRef<SUPPLIER> _SUPPLIER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWarehouseReceiptIDChanging(string value);
    partial void OnWarehouseReceiptIDChanged();
    partial void OnDatetimestampChanging(string value);
    partial void OnDatetimestampChanged();
    partial void OnTotalChanging(System.Nullable<long> value);
    partial void OnTotalChanged();
    partial void OnStateChanging(System.Nullable<bool> value);
    partial void OnStateChanged();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnSupplierIDChanging(string value);
    partial void OnSupplierIDChanged();
    #endregion
		
		public WAREHOUSERECEIPT()
		{
			this._DETAILSWAREHOUSERECEIPTs = new EntitySet<DETAILSWAREHOUSERECEIPT>(new Action<DETAILSWAREHOUSERECEIPT>(this.attach_DETAILSWAREHOUSERECEIPTs), new Action<DETAILSWAREHOUSERECEIPT>(this.detach_DETAILSWAREHOUSERECEIPTs));
			this._EMPLOYEE = default(EntityRef<EMPLOYEE>);
			this._SUPPLIER = default(EntityRef<SUPPLIER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseReceiptID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WarehouseReceiptID
		{
			get
			{
				return this._WarehouseReceiptID;
			}
			set
			{
				if ((this._WarehouseReceiptID != value))
				{
					this.OnWarehouseReceiptIDChanging(value);
					this.SendPropertyChanging();
					this._WarehouseReceiptID = value;
					this.SendPropertyChanged("WarehouseReceiptID");
					this.OnWarehouseReceiptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Datetimestamp", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string Datetimestamp
		{
			get
			{
				return this._Datetimestamp;
			}
			set
			{
				if ((this._Datetimestamp != value))
				{
					this.OnDatetimestampChanging(value);
					this.SendPropertyChanging();
					this._Datetimestamp = value;
					this.SendPropertyChanged("Datetimestamp");
					this.OnDatetimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="BigInt")]
		public System.Nullable<long> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Bit")]
		public System.Nullable<bool> State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					if (this._EMPLOYEE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					if (this._SUPPLIER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WAREHOUSERECEIPT_DETAILSWAREHOUSERECEIPT", Storage="_DETAILSWAREHOUSERECEIPTs", ThisKey="WarehouseReceiptID", OtherKey="WarehouseReceiptID")]
		public EntitySet<DETAILSWAREHOUSERECEIPT> DETAILSWAREHOUSERECEIPTs
		{
			get
			{
				return this._DETAILSWAREHOUSERECEIPTs;
			}
			set
			{
				this._DETAILSWAREHOUSERECEIPTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_WAREHOUSERECEIPT", Storage="_EMPLOYEE", ThisKey="EmployeeID", OtherKey="EmployeeID", IsForeignKey=true)]
		public EMPLOYEE EMPLOYEE
		{
			get
			{
				return this._EMPLOYEE.Entity;
			}
			set
			{
				EMPLOYEE previousValue = this._EMPLOYEE.Entity;
				if (((previousValue != value) 
							|| (this._EMPLOYEE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EMPLOYEE.Entity = null;
						previousValue.WAREHOUSERECEIPTs.Remove(this);
					}
					this._EMPLOYEE.Entity = value;
					if ((value != null))
					{
						value.WAREHOUSERECEIPTs.Add(this);
						this._EmployeeID = value.EmployeeID;
					}
					else
					{
						this._EmployeeID = default(string);
					}
					this.SendPropertyChanged("EMPLOYEE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SUPPLIER_WAREHOUSERECEIPT", Storage="_SUPPLIER", ThisKey="SupplierID", OtherKey="SupplierID", IsForeignKey=true)]
		public SUPPLIER SUPPLIER
		{
			get
			{
				return this._SUPPLIER.Entity;
			}
			set
			{
				SUPPLIER previousValue = this._SUPPLIER.Entity;
				if (((previousValue != value) 
							|| (this._SUPPLIER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SUPPLIER.Entity = null;
						previousValue.WAREHOUSERECEIPTs.Remove(this);
					}
					this._SUPPLIER.Entity = value;
					if ((value != null))
					{
						value.WAREHOUSERECEIPTs.Add(this);
						this._SupplierID = value.SupplierID;
					}
					else
					{
						this._SupplierID = default(string);
					}
					this.SendPropertyChanged("SUPPLIER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DETAILSWAREHOUSERECEIPTs(DETAILSWAREHOUSERECEIPT entity)
		{
			this.SendPropertyChanging();
			entity.WAREHOUSERECEIPT = this;
		}
		
		private void detach_DETAILSWAREHOUSERECEIPTs(DETAILSWAREHOUSERECEIPT entity)
		{
			this.SendPropertyChanging();
			entity.WAREHOUSERECEIPT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BILL")]
	public partial class BILL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BillID;
		
		private string _Datetimestamp;
		
		private System.Nullable<long> _Total;
		
		private System.Nullable<bool> _State;
		
		private System.Nullable<bool> _Payment;
		
		private string _AddressOfCustomerID;
		
		private EntitySet<DETAILSBILL> _DETAILSBILLs;
		
		private EntityRef<ADDRESSOFCUSTOMER> _ADDRESSOFCUSTOMER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBillIDChanging(string value);
    partial void OnBillIDChanged();
    partial void OnDatetimestampChanging(string value);
    partial void OnDatetimestampChanged();
    partial void OnTotalChanging(System.Nullable<long> value);
    partial void OnTotalChanged();
    partial void OnStateChanging(System.Nullable<bool> value);
    partial void OnStateChanged();
    partial void OnPaymentChanging(System.Nullable<bool> value);
    partial void OnPaymentChanged();
    partial void OnAddressOfCustomerIDChanging(string value);
    partial void OnAddressOfCustomerIDChanged();
    #endregion
		
		public BILL()
		{
			this._DETAILSBILLs = new EntitySet<DETAILSBILL>(new Action<DETAILSBILL>(this.attach_DETAILSBILLs), new Action<DETAILSBILL>(this.detach_DETAILSBILLs));
			this._ADDRESSOFCUSTOMER = default(EntityRef<ADDRESSOFCUSTOMER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BillID
		{
			get
			{
				return this._BillID;
			}
			set
			{
				if ((this._BillID != value))
				{
					this.OnBillIDChanging(value);
					this.SendPropertyChanging();
					this._BillID = value;
					this.SendPropertyChanged("BillID");
					this.OnBillIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Datetimestamp", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string Datetimestamp
		{
			get
			{
				return this._Datetimestamp;
			}
			set
			{
				if ((this._Datetimestamp != value))
				{
					this.OnDatetimestampChanging(value);
					this.SendPropertyChanging();
					this._Datetimestamp = value;
					this.SendPropertyChanged("Datetimestamp");
					this.OnDatetimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="BigInt")]
		public System.Nullable<long> Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Bit")]
		public System.Nullable<bool> State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment", DbType="Bit")]
		public System.Nullable<bool> Payment
		{
			get
			{
				return this._Payment;
			}
			set
			{
				if ((this._Payment != value))
				{
					this.OnPaymentChanging(value);
					this.SendPropertyChanging();
					this._Payment = value;
					this.SendPropertyChanged("Payment");
					this.OnPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AddressOfCustomerID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string AddressOfCustomerID
		{
			get
			{
				return this._AddressOfCustomerID;
			}
			set
			{
				if ((this._AddressOfCustomerID != value))
				{
					if (this._ADDRESSOFCUSTOMER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAddressOfCustomerIDChanging(value);
					this.SendPropertyChanging();
					this._AddressOfCustomerID = value;
					this.SendPropertyChanged("AddressOfCustomerID");
					this.OnAddressOfCustomerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BILL_DETAILSBILL", Storage="_DETAILSBILLs", ThisKey="BillID", OtherKey="BillID")]
		public EntitySet<DETAILSBILL> DETAILSBILLs
		{
			get
			{
				return this._DETAILSBILLs;
			}
			set
			{
				this._DETAILSBILLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ADDRESSOFCUSTOMER_BILL", Storage="_ADDRESSOFCUSTOMER", ThisKey="AddressOfCustomerID", OtherKey="AddressOfCustomerID", IsForeignKey=true)]
		public ADDRESSOFCUSTOMER ADDRESSOFCUSTOMER
		{
			get
			{
				return this._ADDRESSOFCUSTOMER.Entity;
			}
			set
			{
				ADDRESSOFCUSTOMER previousValue = this._ADDRESSOFCUSTOMER.Entity;
				if (((previousValue != value) 
							|| (this._ADDRESSOFCUSTOMER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ADDRESSOFCUSTOMER.Entity = null;
						previousValue.BILLs.Remove(this);
					}
					this._ADDRESSOFCUSTOMER.Entity = value;
					if ((value != null))
					{
						value.BILLs.Add(this);
						this._AddressOfCustomerID = value.AddressOfCustomerID;
					}
					else
					{
						this._AddressOfCustomerID = default(string);
					}
					this.SendPropertyChanged("ADDRESSOFCUSTOMER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DETAILSBILLs(DETAILSBILL entity)
		{
			this.SendPropertyChanging();
			entity.BILL = this;
		}
		
		private void detach_DETAILSBILLs(DETAILSBILL entity)
		{
			this.SendPropertyChanging();
			entity.BILL = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BRAND")]
	public partial class BRAND : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BrandID;
		
		private string _BrandName;
		
		private EntitySet<PHONE> _PHONEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBrandIDChanging(string value);
    partial void OnBrandIDChanged();
    partial void OnBrandNameChanging(string value);
    partial void OnBrandNameChanged();
    #endregion
		
		public BRAND()
		{
			this._PHONEs = new EntitySet<PHONE>(new Action<PHONE>(this.attach_PHONEs), new Action<PHONE>(this.detach_PHONEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BrandID
		{
			get
			{
				return this._BrandID;
			}
			set
			{
				if ((this._BrandID != value))
				{
					this.OnBrandIDChanging(value);
					this.SendPropertyChanging();
					this._BrandID = value;
					this.SendPropertyChanged("BrandID");
					this.OnBrandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string BrandName
		{
			get
			{
				return this._BrandName;
			}
			set
			{
				if ((this._BrandName != value))
				{
					this.OnBrandNameChanging(value);
					this.SendPropertyChanging();
					this._BrandName = value;
					this.SendPropertyChanged("BrandName");
					this.OnBrandNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BRAND_PHONE", Storage="_PHONEs", ThisKey="BrandID", OtherKey="BrandID")]
		public EntitySet<PHONE> PHONEs
		{
			get
			{
				return this._PHONEs;
			}
			set
			{
				this._PHONEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHONEs(PHONE entity)
		{
			this.SendPropertyChanging();
			entity.BRAND = this;
		}
		
		private void detach_PHONEs(PHONE entity)
		{
			this.SendPropertyChanging();
			entity.BRAND = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CAPACITY")]
	public partial class CAPACITY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CapacityID;
		
		private int _Capacity1;
		
		private string _Unit;
		
		private EntitySet<DETAILSPHONE> _DETAILSPHONEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCapacityIDChanging(string value);
    partial void OnCapacityIDChanged();
    partial void OnCapacity1Changing(int value);
    partial void OnCapacity1Changed();
    partial void OnUnitChanging(string value);
    partial void OnUnitChanged();
    #endregion
		
		public CAPACITY()
		{
			this._DETAILSPHONEs = new EntitySet<DETAILSPHONE>(new Action<DETAILSPHONE>(this.attach_DETAILSPHONEs), new Action<DETAILSPHONE>(this.detach_DETAILSPHONEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapacityID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CapacityID
		{
			get
			{
				return this._CapacityID;
			}
			set
			{
				if ((this._CapacityID != value))
				{
					this.OnCapacityIDChanging(value);
					this.SendPropertyChanging();
					this._CapacityID = value;
					this.SendPropertyChanged("CapacityID");
					this.OnCapacityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Capacity", Storage="_Capacity1", DbType="Int NOT NULL")]
		public int Capacity1
		{
			get
			{
				return this._Capacity1;
			}
			set
			{
				if ((this._Capacity1 != value))
				{
					this.OnCapacity1Changing(value);
					this.SendPropertyChanging();
					this._Capacity1 = value;
					this.SendPropertyChanged("Capacity1");
					this.OnCapacity1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Unit", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Unit
		{
			get
			{
				return this._Unit;
			}
			set
			{
				if ((this._Unit != value))
				{
					this.OnUnitChanging(value);
					this.SendPropertyChanging();
					this._Unit = value;
					this.SendPropertyChanged("Unit");
					this.OnUnitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAPACITY_DETAILSPHONE", Storage="_DETAILSPHONEs", ThisKey="CapacityID", OtherKey="CapacityID")]
		public EntitySet<DETAILSPHONE> DETAILSPHONEs
		{
			get
			{
				return this._DETAILSPHONEs;
			}
			set
			{
				this._DETAILSPHONEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DETAILSPHONEs(DETAILSPHONE entity)
		{
			this.SendPropertyChanging();
			entity.CAPACITY = this;
		}
		
		private void detach_DETAILSPHONEs(DETAILSPHONE entity)
		{
			this.SendPropertyChanging();
			entity.CAPACITY = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.COLOR")]
	public partial class COLOR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ColorID;
		
		private string _ColorName;
		
		private EntitySet<DETAILSPHONE> _DETAILSPHONEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnColorIDChanging(string value);
    partial void OnColorIDChanged();
    partial void OnColorNameChanging(string value);
    partial void OnColorNameChanged();
    #endregion
		
		public COLOR()
		{
			this._DETAILSPHONEs = new EntitySet<DETAILSPHONE>(new Action<DETAILSPHONE>(this.attach_DETAILSPHONEs), new Action<DETAILSPHONE>(this.detach_DETAILSPHONEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ColorID
		{
			get
			{
				return this._ColorID;
			}
			set
			{
				if ((this._ColorID != value))
				{
					this.OnColorIDChanging(value);
					this.SendPropertyChanging();
					this._ColorID = value;
					this.SendPropertyChanged("ColorID");
					this.OnColorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorName", DbType="VarChar(50)")]
		public string ColorName
		{
			get
			{
				return this._ColorName;
			}
			set
			{
				if ((this._ColorName != value))
				{
					this.OnColorNameChanging(value);
					this.SendPropertyChanging();
					this._ColorName = value;
					this.SendPropertyChanged("ColorName");
					this.OnColorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COLOR_DETAILSPHONE", Storage="_DETAILSPHONEs", ThisKey="ColorID", OtherKey="ColorID")]
		public EntitySet<DETAILSPHONE> DETAILSPHONEs
		{
			get
			{
				return this._DETAILSPHONEs;
			}
			set
			{
				this._DETAILSPHONEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DETAILSPHONEs(DETAILSPHONE entity)
		{
			this.SendPropertyChanging();
			entity.COLOR = this;
		}
		
		private void detach_DETAILSPHONEs(DETAILSPHONE entity)
		{
			this.SendPropertyChanging();
			entity.COLOR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.COMMENT")]
	public partial class COMMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _CommentID;
		
		private string _Body;
		
		private string _Name;
		
		private string _PhoneNO;
		
		private string _PhoneID;
		
		private string _Datetimestamp;
		
		private EntitySet<RESPONECOMMENT> _RESPONECOMMENTs;
		
		private EntityRef<PHONE> _PHONE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCommentIDChanging(string value);
    partial void OnCommentIDChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPhoneNOChanging(string value);
    partial void OnPhoneNOChanged();
    partial void OnPhoneIDChanging(string value);
    partial void OnPhoneIDChanged();
    partial void OnDatetimestampChanging(string value);
    partial void OnDatetimestampChanged();
    #endregion
		
		public COMMENT()
		{
			this._RESPONECOMMENTs = new EntitySet<RESPONECOMMENT>(new Action<RESPONECOMMENT>(this.attach_RESPONECOMMENTs), new Action<RESPONECOMMENT>(this.detach_RESPONECOMMENTs));
			this._PHONE = default(EntityRef<PHONE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string CommentID
		{
			get
			{
				return this._CommentID;
			}
			set
			{
				if ((this._CommentID != value))
				{
					this.OnCommentIDChanging(value);
					this.SendPropertyChanging();
					this._CommentID = value;
					this.SendPropertyChanged("CommentID");
					this.OnCommentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNO", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string PhoneNO
		{
			get
			{
				return this._PhoneNO;
			}
			set
			{
				if ((this._PhoneNO != value))
				{
					this.OnPhoneNOChanging(value);
					this.SendPropertyChanging();
					this._PhoneNO = value;
					this.SendPropertyChanged("PhoneNO");
					this.OnPhoneNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string PhoneID
		{
			get
			{
				return this._PhoneID;
			}
			set
			{
				if ((this._PhoneID != value))
				{
					if (this._PHONE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhoneIDChanging(value);
					this.SendPropertyChanging();
					this._PhoneID = value;
					this.SendPropertyChanged("PhoneID");
					this.OnPhoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Datetimestamp", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string Datetimestamp
		{
			get
			{
				return this._Datetimestamp;
			}
			set
			{
				if ((this._Datetimestamp != value))
				{
					this.OnDatetimestampChanging(value);
					this.SendPropertyChanging();
					this._Datetimestamp = value;
					this.SendPropertyChanged("Datetimestamp");
					this.OnDatetimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COMMENT_RESPONECOMMENT", Storage="_RESPONECOMMENTs", ThisKey="CommentID", OtherKey="CommentID")]
		public EntitySet<RESPONECOMMENT> RESPONECOMMENTs
		{
			get
			{
				return this._RESPONECOMMENTs;
			}
			set
			{
				this._RESPONECOMMENTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONE_COMMENT", Storage="_PHONE", ThisKey="PhoneID", OtherKey="PhoneID", IsForeignKey=true)]
		public PHONE PHONE
		{
			get
			{
				return this._PHONE.Entity;
			}
			set
			{
				PHONE previousValue = this._PHONE.Entity;
				if (((previousValue != value) 
							|| (this._PHONE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONE.Entity = null;
						previousValue.COMMENTs.Remove(this);
					}
					this._PHONE.Entity = value;
					if ((value != null))
					{
						value.COMMENTs.Add(this);
						this._PhoneID = value.PhoneID;
					}
					else
					{
						this._PhoneID = default(string);
					}
					this.SendPropertyChanged("PHONE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RESPONECOMMENTs(RESPONECOMMENT entity)
		{
			this.SendPropertyChanging();
			entity.COMMENT = this;
		}
		
		private void detach_RESPONECOMMENTs(RESPONECOMMENT entity)
		{
			this.SendPropertyChanging();
			entity.COMMENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUSTOMER")]
	public partial class CUSTOMER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Email;
		
		private string _CustomerName;
		
		private string _Password;
		
		private string _PhoneNO;
		
		private EntitySet<ADDRESSOFCUSTOMER> _ADDRESSOFCUSTOMERs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPhoneNOChanging(string value);
    partial void OnPhoneNOChanged();
    #endregion
		
		public CUSTOMER()
		{
			this._ADDRESSOFCUSTOMERs = new EntitySet<ADDRESSOFCUSTOMER>(new Action<ADDRESSOFCUSTOMER>(this.attach_ADDRESSOFCUSTOMERs), new Action<ADDRESSOFCUSTOMER>(this.detach_ADDRESSOFCUSTOMERs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomerName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(30)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNO", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string PhoneNO
		{
			get
			{
				return this._PhoneNO;
			}
			set
			{
				if ((this._PhoneNO != value))
				{
					this.OnPhoneNOChanging(value);
					this.SendPropertyChanging();
					this._PhoneNO = value;
					this.SendPropertyChanged("PhoneNO");
					this.OnPhoneNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_ADDRESSOFCUSTOMER", Storage="_ADDRESSOFCUSTOMERs", ThisKey="Email", OtherKey="Email")]
		public EntitySet<ADDRESSOFCUSTOMER> ADDRESSOFCUSTOMERs
		{
			get
			{
				return this._ADDRESSOFCUSTOMERs;
			}
			set
			{
				this._ADDRESSOFCUSTOMERs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ADDRESSOFCUSTOMERs(ADDRESSOFCUSTOMER entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = this;
		}
		
		private void detach_ADDRESSOFCUSTOMERs(ADDRESSOFCUSTOMER entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DETAILSBILL")]
	public partial class DETAILSBILL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _BillID;
		
		private string _DetailsPhoneID;
		
		private int _QuantityPurchased;
		
		private System.Nullable<int> _Star;
		
		private EntityRef<BILL> _BILL;
		
		private EntityRef<DETAILSPHONE> _DETAILSPHONE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBillIDChanging(string value);
    partial void OnBillIDChanged();
    partial void OnDetailsPhoneIDChanging(string value);
    partial void OnDetailsPhoneIDChanged();
    partial void OnQuantityPurchasedChanging(int value);
    partial void OnQuantityPurchasedChanged();
    partial void OnStarChanging(System.Nullable<int> value);
    partial void OnStarChanged();
    #endregion
		
		public DETAILSBILL()
		{
			this._BILL = default(EntityRef<BILL>);
			this._DETAILSPHONE = default(EntityRef<DETAILSPHONE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string BillID
		{
			get
			{
				return this._BillID;
			}
			set
			{
				if ((this._BillID != value))
				{
					if (this._BILL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBillIDChanging(value);
					this.SendPropertyChanging();
					this._BillID = value;
					this.SendPropertyChanged("BillID");
					this.OnBillIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailsPhoneID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DetailsPhoneID
		{
			get
			{
				return this._DetailsPhoneID;
			}
			set
			{
				if ((this._DetailsPhoneID != value))
				{
					if (this._DETAILSPHONE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetailsPhoneIDChanging(value);
					this.SendPropertyChanging();
					this._DetailsPhoneID = value;
					this.SendPropertyChanged("DetailsPhoneID");
					this.OnDetailsPhoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityPurchased", DbType="Int NOT NULL")]
		public int QuantityPurchased
		{
			get
			{
				return this._QuantityPurchased;
			}
			set
			{
				if ((this._QuantityPurchased != value))
				{
					this.OnQuantityPurchasedChanging(value);
					this.SendPropertyChanging();
					this._QuantityPurchased = value;
					this.SendPropertyChanged("QuantityPurchased");
					this.OnQuantityPurchasedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Star", DbType="Int")]
		public System.Nullable<int> Star
		{
			get
			{
				return this._Star;
			}
			set
			{
				if ((this._Star != value))
				{
					this.OnStarChanging(value);
					this.SendPropertyChanging();
					this._Star = value;
					this.SendPropertyChanged("Star");
					this.OnStarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BILL_DETAILSBILL", Storage="_BILL", ThisKey="BillID", OtherKey="BillID", IsForeignKey=true)]
		public BILL BILL
		{
			get
			{
				return this._BILL.Entity;
			}
			set
			{
				BILL previousValue = this._BILL.Entity;
				if (((previousValue != value) 
							|| (this._BILL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BILL.Entity = null;
						previousValue.DETAILSBILLs.Remove(this);
					}
					this._BILL.Entity = value;
					if ((value != null))
					{
						value.DETAILSBILLs.Add(this);
						this._BillID = value.BillID;
					}
					else
					{
						this._BillID = default(string);
					}
					this.SendPropertyChanged("BILL");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DETAILSPHONE_DETAILSBILL", Storage="_DETAILSPHONE", ThisKey="DetailsPhoneID", OtherKey="DetailsPhoneID", IsForeignKey=true)]
		public DETAILSPHONE DETAILSPHONE
		{
			get
			{
				return this._DETAILSPHONE.Entity;
			}
			set
			{
				DETAILSPHONE previousValue = this._DETAILSPHONE.Entity;
				if (((previousValue != value) 
							|| (this._DETAILSPHONE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DETAILSPHONE.Entity = null;
						previousValue.DETAILSBILLs.Remove(this);
					}
					this._DETAILSPHONE.Entity = value;
					if ((value != null))
					{
						value.DETAILSBILLs.Add(this);
						this._DetailsPhoneID = value.DetailsPhoneID;
					}
					else
					{
						this._DetailsPhoneID = default(string);
					}
					this.SendPropertyChanged("DETAILSPHONE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DETAILSPHONE")]
	public partial class DETAILSPHONE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _DetailsPhoneID;
		
		private string _PhoneID;
		
		private string _ColorID;
		
		private string _CapacityID;
		
		private System.Nullable<int> _Price;
		
		private string _DetailImage;
		
		private System.Nullable<int> _Quantity;
		
		private EntitySet<DETAILSBILL> _DETAILSBILLs;
		
		private EntitySet<DETAILSWAREHOUSERECEIPT> _DETAILSWAREHOUSERECEIPTs;
		
		private EntityRef<CAPACITY> _CAPACITY;
		
		private EntityRef<COLOR> _COLOR;
		
		private EntityRef<PHONE> _PHONE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDetailsPhoneIDChanging(string value);
    partial void OnDetailsPhoneIDChanged();
    partial void OnPhoneIDChanging(string value);
    partial void OnPhoneIDChanged();
    partial void OnColorIDChanging(string value);
    partial void OnColorIDChanged();
    partial void OnCapacityIDChanging(string value);
    partial void OnCapacityIDChanged();
    partial void OnPriceChanging(System.Nullable<int> value);
    partial void OnPriceChanged();
    partial void OnDetailImageChanging(string value);
    partial void OnDetailImageChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    #endregion
		
		public DETAILSPHONE()
		{
			this._DETAILSBILLs = new EntitySet<DETAILSBILL>(new Action<DETAILSBILL>(this.attach_DETAILSBILLs), new Action<DETAILSBILL>(this.detach_DETAILSBILLs));
			this._DETAILSWAREHOUSERECEIPTs = new EntitySet<DETAILSWAREHOUSERECEIPT>(new Action<DETAILSWAREHOUSERECEIPT>(this.attach_DETAILSWAREHOUSERECEIPTs), new Action<DETAILSWAREHOUSERECEIPT>(this.detach_DETAILSWAREHOUSERECEIPTs));
			this._CAPACITY = default(EntityRef<CAPACITY>);
			this._COLOR = default(EntityRef<COLOR>);
			this._PHONE = default(EntityRef<PHONE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailsPhoneID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DetailsPhoneID
		{
			get
			{
				return this._DetailsPhoneID;
			}
			set
			{
				if ((this._DetailsPhoneID != value))
				{
					this.OnDetailsPhoneIDChanging(value);
					this.SendPropertyChanging();
					this._DetailsPhoneID = value;
					this.SendPropertyChanged("DetailsPhoneID");
					this.OnDetailsPhoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneID", DbType="VarChar(10)")]
		public string PhoneID
		{
			get
			{
				return this._PhoneID;
			}
			set
			{
				if ((this._PhoneID != value))
				{
					if (this._PHONE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPhoneIDChanging(value);
					this.SendPropertyChanging();
					this._PhoneID = value;
					this.SendPropertyChanged("PhoneID");
					this.OnPhoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColorID", DbType="VarChar(10)")]
		public string ColorID
		{
			get
			{
				return this._ColorID;
			}
			set
			{
				if ((this._ColorID != value))
				{
					if (this._COLOR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnColorIDChanging(value);
					this.SendPropertyChanging();
					this._ColorID = value;
					this.SendPropertyChanged("ColorID");
					this.OnColorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CapacityID", DbType="VarChar(10)")]
		public string CapacityID
		{
			get
			{
				return this._CapacityID;
			}
			set
			{
				if ((this._CapacityID != value))
				{
					if (this._CAPACITY.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCapacityIDChanging(value);
					this.SendPropertyChanging();
					this._CapacityID = value;
					this.SendPropertyChanged("CapacityID");
					this.OnCapacityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int")]
		public System.Nullable<int> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailImage", DbType="VarChar(MAX)")]
		public string DetailImage
		{
			get
			{
				return this._DetailImage;
			}
			set
			{
				if ((this._DetailImage != value))
				{
					this.OnDetailImageChanging(value);
					this.SendPropertyChanging();
					this._DetailImage = value;
					this.SendPropertyChanged("DetailImage");
					this.OnDetailImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DETAILSPHONE_DETAILSBILL", Storage="_DETAILSBILLs", ThisKey="DetailsPhoneID", OtherKey="DetailsPhoneID")]
		public EntitySet<DETAILSBILL> DETAILSBILLs
		{
			get
			{
				return this._DETAILSBILLs;
			}
			set
			{
				this._DETAILSBILLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DETAILSPHONE_DETAILSWAREHOUSERECEIPT", Storage="_DETAILSWAREHOUSERECEIPTs", ThisKey="DetailsPhoneID", OtherKey="DetailsPhoneID")]
		public EntitySet<DETAILSWAREHOUSERECEIPT> DETAILSWAREHOUSERECEIPTs
		{
			get
			{
				return this._DETAILSWAREHOUSERECEIPTs;
			}
			set
			{
				this._DETAILSWAREHOUSERECEIPTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CAPACITY_DETAILSPHONE", Storage="_CAPACITY", ThisKey="CapacityID", OtherKey="CapacityID", IsForeignKey=true)]
		public CAPACITY CAPACITY
		{
			get
			{
				return this._CAPACITY.Entity;
			}
			set
			{
				CAPACITY previousValue = this._CAPACITY.Entity;
				if (((previousValue != value) 
							|| (this._CAPACITY.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CAPACITY.Entity = null;
						previousValue.DETAILSPHONEs.Remove(this);
					}
					this._CAPACITY.Entity = value;
					if ((value != null))
					{
						value.DETAILSPHONEs.Add(this);
						this._CapacityID = value.CapacityID;
					}
					else
					{
						this._CapacityID = default(string);
					}
					this.SendPropertyChanged("CAPACITY");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COLOR_DETAILSPHONE", Storage="_COLOR", ThisKey="ColorID", OtherKey="ColorID", IsForeignKey=true)]
		public COLOR COLOR
		{
			get
			{
				return this._COLOR.Entity;
			}
			set
			{
				COLOR previousValue = this._COLOR.Entity;
				if (((previousValue != value) 
							|| (this._COLOR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COLOR.Entity = null;
						previousValue.DETAILSPHONEs.Remove(this);
					}
					this._COLOR.Entity = value;
					if ((value != null))
					{
						value.DETAILSPHONEs.Add(this);
						this._ColorID = value.ColorID;
					}
					else
					{
						this._ColorID = default(string);
					}
					this.SendPropertyChanged("COLOR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONE_DETAILSPHONE", Storage="_PHONE", ThisKey="PhoneID", OtherKey="PhoneID", IsForeignKey=true)]
		public PHONE PHONE
		{
			get
			{
				return this._PHONE.Entity;
			}
			set
			{
				PHONE previousValue = this._PHONE.Entity;
				if (((previousValue != value) 
							|| (this._PHONE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHONE.Entity = null;
						previousValue.DETAILSPHONEs.Remove(this);
					}
					this._PHONE.Entity = value;
					if ((value != null))
					{
						value.DETAILSPHONEs.Add(this);
						this._PhoneID = value.PhoneID;
					}
					else
					{
						this._PhoneID = default(string);
					}
					this.SendPropertyChanged("PHONE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DETAILSBILLs(DETAILSBILL entity)
		{
			this.SendPropertyChanging();
			entity.DETAILSPHONE = this;
		}
		
		private void detach_DETAILSBILLs(DETAILSBILL entity)
		{
			this.SendPropertyChanging();
			entity.DETAILSPHONE = null;
		}
		
		private void attach_DETAILSWAREHOUSERECEIPTs(DETAILSWAREHOUSERECEIPT entity)
		{
			this.SendPropertyChanging();
			entity.DETAILSPHONE = this;
		}
		
		private void detach_DETAILSWAREHOUSERECEIPTs(DETAILSWAREHOUSERECEIPT entity)
		{
			this.SendPropertyChanging();
			entity.DETAILSPHONE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DETAILSWAREHOUSERECEIPT")]
	public partial class DETAILSWAREHOUSERECEIPT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _WarehouseReceiptID;
		
		private string _DetailsPhoneID;
		
		private int _QuantityOdered;
		
		private int _Price;
		
		private EntityRef<DETAILSPHONE> _DETAILSPHONE;
		
		private EntityRef<WAREHOUSERECEIPT> _WAREHOUSERECEIPT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWarehouseReceiptIDChanging(string value);
    partial void OnWarehouseReceiptIDChanged();
    partial void OnDetailsPhoneIDChanging(string value);
    partial void OnDetailsPhoneIDChanged();
    partial void OnQuantityOderedChanging(int value);
    partial void OnQuantityOderedChanged();
    partial void OnPriceChanging(int value);
    partial void OnPriceChanged();
    #endregion
		
		public DETAILSWAREHOUSERECEIPT()
		{
			this._DETAILSPHONE = default(EntityRef<DETAILSPHONE>);
			this._WAREHOUSERECEIPT = default(EntityRef<WAREHOUSERECEIPT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarehouseReceiptID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string WarehouseReceiptID
		{
			get
			{
				return this._WarehouseReceiptID;
			}
			set
			{
				if ((this._WarehouseReceiptID != value))
				{
					if (this._WAREHOUSERECEIPT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnWarehouseReceiptIDChanging(value);
					this.SendPropertyChanging();
					this._WarehouseReceiptID = value;
					this.SendPropertyChanged("WarehouseReceiptID");
					this.OnWarehouseReceiptIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailsPhoneID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string DetailsPhoneID
		{
			get
			{
				return this._DetailsPhoneID;
			}
			set
			{
				if ((this._DetailsPhoneID != value))
				{
					if (this._DETAILSPHONE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDetailsPhoneIDChanging(value);
					this.SendPropertyChanging();
					this._DetailsPhoneID = value;
					this.SendPropertyChanged("DetailsPhoneID");
					this.OnDetailsPhoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuantityOdered", DbType="Int NOT NULL")]
		public int QuantityOdered
		{
			get
			{
				return this._QuantityOdered;
			}
			set
			{
				if ((this._QuantityOdered != value))
				{
					this.OnQuantityOderedChanging(value);
					this.SendPropertyChanging();
					this._QuantityOdered = value;
					this.SendPropertyChanged("QuantityOdered");
					this.OnQuantityOderedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DETAILSPHONE_DETAILSWAREHOUSERECEIPT", Storage="_DETAILSPHONE", ThisKey="DetailsPhoneID", OtherKey="DetailsPhoneID", IsForeignKey=true)]
		public DETAILSPHONE DETAILSPHONE
		{
			get
			{
				return this._DETAILSPHONE.Entity;
			}
			set
			{
				DETAILSPHONE previousValue = this._DETAILSPHONE.Entity;
				if (((previousValue != value) 
							|| (this._DETAILSPHONE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DETAILSPHONE.Entity = null;
						previousValue.DETAILSWAREHOUSERECEIPTs.Remove(this);
					}
					this._DETAILSPHONE.Entity = value;
					if ((value != null))
					{
						value.DETAILSWAREHOUSERECEIPTs.Add(this);
						this._DetailsPhoneID = value.DetailsPhoneID;
					}
					else
					{
						this._DetailsPhoneID = default(string);
					}
					this.SendPropertyChanged("DETAILSPHONE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="WAREHOUSERECEIPT_DETAILSWAREHOUSERECEIPT", Storage="_WAREHOUSERECEIPT", ThisKey="WarehouseReceiptID", OtherKey="WarehouseReceiptID", IsForeignKey=true)]
		public WAREHOUSERECEIPT WAREHOUSERECEIPT
		{
			get
			{
				return this._WAREHOUSERECEIPT.Entity;
			}
			set
			{
				WAREHOUSERECEIPT previousValue = this._WAREHOUSERECEIPT.Entity;
				if (((previousValue != value) 
							|| (this._WAREHOUSERECEIPT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WAREHOUSERECEIPT.Entity = null;
						previousValue.DETAILSWAREHOUSERECEIPTs.Remove(this);
					}
					this._WAREHOUSERECEIPT.Entity = value;
					if ((value != null))
					{
						value.DETAILSWAREHOUSERECEIPTs.Add(this);
						this._WarehouseReceiptID = value.WarehouseReceiptID;
					}
					else
					{
						this._WarehouseReceiptID = default(string);
					}
					this.SendPropertyChanged("WAREHOUSERECEIPT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMPLOYEE")]
	public partial class EMPLOYEE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _EmployeeID;
		
		private string _EmployeeName;
		
		private string _Password;
		
		private string _Avatar;
		
		private string _ChucVu;
		
		private EntitySet<WAREHOUSERECEIPT> _WAREHOUSERECEIPTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeIDChanging(string value);
    partial void OnEmployeeIDChanged();
    partial void OnEmployeeNameChanging(string value);
    partial void OnEmployeeNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnAvatarChanging(string value);
    partial void OnAvatarChanged();
    partial void OnChucVuChanging(string value);
    partial void OnChucVuChanged();
    #endregion
		
		public EMPLOYEE()
		{
			this._WAREHOUSERECEIPTs = new EntitySet<WAREHOUSERECEIPT>(new Action<WAREHOUSERECEIPT>(this.attach_WAREHOUSERECEIPTs), new Action<WAREHOUSERECEIPT>(this.detach_WAREHOUSERECEIPTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string EmployeeID
		{
			get
			{
				return this._EmployeeID;
			}
			set
			{
				if ((this._EmployeeID != value))
				{
					this.OnEmployeeIDChanging(value);
					this.SendPropertyChanging();
					this._EmployeeID = value;
					this.SendPropertyChanged("EmployeeID");
					this.OnEmployeeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this.OnEmployeeNameChanging(value);
					this.SendPropertyChanging();
					this._EmployeeName = value;
					this.SendPropertyChanged("EmployeeName");
					this.OnEmployeeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avatar", DbType="VarChar(MAX)")]
		public string Avatar
		{
			get
			{
				return this._Avatar;
			}
			set
			{
				if ((this._Avatar != value))
				{
					this.OnAvatarChanging(value);
					this.SendPropertyChanging();
					this._Avatar = value;
					this.SendPropertyChanged("Avatar");
					this.OnAvatarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChucVu", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string ChucVu
		{
			get
			{
				return this._ChucVu;
			}
			set
			{
				if ((this._ChucVu != value))
				{
					this.OnChucVuChanging(value);
					this.SendPropertyChanging();
					this._ChucVu = value;
					this.SendPropertyChanged("ChucVu");
					this.OnChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EMPLOYEE_WAREHOUSERECEIPT", Storage="_WAREHOUSERECEIPTs", ThisKey="EmployeeID", OtherKey="EmployeeID")]
		public EntitySet<WAREHOUSERECEIPT> WAREHOUSERECEIPTs
		{
			get
			{
				return this._WAREHOUSERECEIPTs;
			}
			set
			{
				this._WAREHOUSERECEIPTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WAREHOUSERECEIPTs(WAREHOUSERECEIPT entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE = this;
		}
		
		private void detach_WAREHOUSERECEIPTs(WAREHOUSERECEIPT entity)
		{
			this.SendPropertyChanging();
			entity.EMPLOYEE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHONE")]
	public partial class PHONE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _PhoneID;
		
		private string _PhoneName;
		
		private string _MainImage;
		
		private string _ScreenTeachnology;
		
		private System.Nullable<int> _PhysicalWidth;
		
		private System.Nullable<int> _PhysicalHeight;
		
		private System.Nullable<decimal> _ScreenDiagonal;
		
		private string _Chip;
		
		private string _OperatingSystem;
		
		private string _Sim;
		
		private string _Wifi;
		
		private string _Bluetooth;
		
		private System.Nullable<int> _BatteryCapacity;
		
		private string _TypeOfPin;
		
		private string _BrandID;
		
		private EntitySet<COMMENT> _COMMENTs;
		
		private EntitySet<DETAILSPHONE> _DETAILSPHONEs;
		
		private EntityRef<BRAND> _BRAND;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhoneIDChanging(string value);
    partial void OnPhoneIDChanged();
    partial void OnPhoneNameChanging(string value);
    partial void OnPhoneNameChanged();
    partial void OnMainImageChanging(string value);
    partial void OnMainImageChanged();
    partial void OnScreenTeachnologyChanging(string value);
    partial void OnScreenTeachnologyChanged();
    partial void OnPhysicalWidthChanging(System.Nullable<int> value);
    partial void OnPhysicalWidthChanged();
    partial void OnPhysicalHeightChanging(System.Nullable<int> value);
    partial void OnPhysicalHeightChanged();
    partial void OnScreenDiagonalChanging(System.Nullable<decimal> value);
    partial void OnScreenDiagonalChanged();
    partial void OnChipChanging(string value);
    partial void OnChipChanged();
    partial void OnOperatingSystemChanging(string value);
    partial void OnOperatingSystemChanged();
    partial void OnSimChanging(string value);
    partial void OnSimChanged();
    partial void OnWifiChanging(string value);
    partial void OnWifiChanged();
    partial void OnBluetoothChanging(string value);
    partial void OnBluetoothChanged();
    partial void OnBatteryCapacityChanging(System.Nullable<int> value);
    partial void OnBatteryCapacityChanged();
    partial void OnTypeOfPinChanging(string value);
    partial void OnTypeOfPinChanged();
    partial void OnBrandIDChanging(string value);
    partial void OnBrandIDChanged();
    #endregion
		
		public PHONE()
		{
			this._COMMENTs = new EntitySet<COMMENT>(new Action<COMMENT>(this.attach_COMMENTs), new Action<COMMENT>(this.detach_COMMENTs));
			this._DETAILSPHONEs = new EntitySet<DETAILSPHONE>(new Action<DETAILSPHONE>(this.attach_DETAILSPHONEs), new Action<DETAILSPHONE>(this.detach_DETAILSPHONEs));
			this._BRAND = default(EntityRef<BRAND>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string PhoneID
		{
			get
			{
				return this._PhoneID;
			}
			set
			{
				if ((this._PhoneID != value))
				{
					this.OnPhoneIDChanging(value);
					this.SendPropertyChanging();
					this._PhoneID = value;
					this.SendPropertyChanged("PhoneID");
					this.OnPhoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneName", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string PhoneName
		{
			get
			{
				return this._PhoneName;
			}
			set
			{
				if ((this._PhoneName != value))
				{
					this.OnPhoneNameChanging(value);
					this.SendPropertyChanging();
					this._PhoneName = value;
					this.SendPropertyChanged("PhoneName");
					this.OnPhoneNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainImage", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MainImage
		{
			get
			{
				return this._MainImage;
			}
			set
			{
				if ((this._MainImage != value))
				{
					this.OnMainImageChanging(value);
					this.SendPropertyChanging();
					this._MainImage = value;
					this.SendPropertyChanged("MainImage");
					this.OnMainImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreenTeachnology", DbType="VarChar(50)")]
		public string ScreenTeachnology
		{
			get
			{
				return this._ScreenTeachnology;
			}
			set
			{
				if ((this._ScreenTeachnology != value))
				{
					this.OnScreenTeachnologyChanging(value);
					this.SendPropertyChanging();
					this._ScreenTeachnology = value;
					this.SendPropertyChanged("ScreenTeachnology");
					this.OnScreenTeachnologyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalWidth", DbType="Int")]
		public System.Nullable<int> PhysicalWidth
		{
			get
			{
				return this._PhysicalWidth;
			}
			set
			{
				if ((this._PhysicalWidth != value))
				{
					this.OnPhysicalWidthChanging(value);
					this.SendPropertyChanging();
					this._PhysicalWidth = value;
					this.SendPropertyChanged("PhysicalWidth");
					this.OnPhysicalWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhysicalHeight", DbType="Int")]
		public System.Nullable<int> PhysicalHeight
		{
			get
			{
				return this._PhysicalHeight;
			}
			set
			{
				if ((this._PhysicalHeight != value))
				{
					this.OnPhysicalHeightChanging(value);
					this.SendPropertyChanging();
					this._PhysicalHeight = value;
					this.SendPropertyChanged("PhysicalHeight");
					this.OnPhysicalHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ScreenDiagonal", DbType="Decimal(5,1)")]
		public System.Nullable<decimal> ScreenDiagonal
		{
			get
			{
				return this._ScreenDiagonal;
			}
			set
			{
				if ((this._ScreenDiagonal != value))
				{
					this.OnScreenDiagonalChanging(value);
					this.SendPropertyChanging();
					this._ScreenDiagonal = value;
					this.SendPropertyChanged("ScreenDiagonal");
					this.OnScreenDiagonalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chip", DbType="NVarChar(50)")]
		public string Chip
		{
			get
			{
				return this._Chip;
			}
			set
			{
				if ((this._Chip != value))
				{
					this.OnChipChanging(value);
					this.SendPropertyChanging();
					this._Chip = value;
					this.SendPropertyChanged("Chip");
					this.OnChipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OperatingSystem", DbType="VarChar(100)")]
		public string OperatingSystem
		{
			get
			{
				return this._OperatingSystem;
			}
			set
			{
				if ((this._OperatingSystem != value))
				{
					this.OnOperatingSystemChanging(value);
					this.SendPropertyChanging();
					this._OperatingSystem = value;
					this.SendPropertyChanged("OperatingSystem");
					this.OnOperatingSystemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sim", DbType="VarChar(50)")]
		public string Sim
		{
			get
			{
				return this._Sim;
			}
			set
			{
				if ((this._Sim != value))
				{
					this.OnSimChanging(value);
					this.SendPropertyChanging();
					this._Sim = value;
					this.SendPropertyChanged("Sim");
					this.OnSimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wifi", DbType="VarChar(200)")]
		public string Wifi
		{
			get
			{
				return this._Wifi;
			}
			set
			{
				if ((this._Wifi != value))
				{
					this.OnWifiChanging(value);
					this.SendPropertyChanging();
					this._Wifi = value;
					this.SendPropertyChanged("Wifi");
					this.OnWifiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bluetooth", DbType="VarChar(50)")]
		public string Bluetooth
		{
			get
			{
				return this._Bluetooth;
			}
			set
			{
				if ((this._Bluetooth != value))
				{
					this.OnBluetoothChanging(value);
					this.SendPropertyChanging();
					this._Bluetooth = value;
					this.SendPropertyChanged("Bluetooth");
					this.OnBluetoothChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BatteryCapacity", DbType="Int")]
		public System.Nullable<int> BatteryCapacity
		{
			get
			{
				return this._BatteryCapacity;
			}
			set
			{
				if ((this._BatteryCapacity != value))
				{
					this.OnBatteryCapacityChanging(value);
					this.SendPropertyChanging();
					this._BatteryCapacity = value;
					this.SendPropertyChanged("BatteryCapacity");
					this.OnBatteryCapacityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfPin", DbType="VarChar(50)")]
		public string TypeOfPin
		{
			get
			{
				return this._TypeOfPin;
			}
			set
			{
				if ((this._TypeOfPin != value))
				{
					this.OnTypeOfPinChanging(value);
					this.SendPropertyChanging();
					this._TypeOfPin = value;
					this.SendPropertyChanged("TypeOfPin");
					this.OnTypeOfPinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrandID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string BrandID
		{
			get
			{
				return this._BrandID;
			}
			set
			{
				if ((this._BrandID != value))
				{
					if (this._BRAND.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBrandIDChanging(value);
					this.SendPropertyChanging();
					this._BrandID = value;
					this.SendPropertyChanged("BrandID");
					this.OnBrandIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONE_COMMENT", Storage="_COMMENTs", ThisKey="PhoneID", OtherKey="PhoneID")]
		public EntitySet<COMMENT> COMMENTs
		{
			get
			{
				return this._COMMENTs;
			}
			set
			{
				this._COMMENTs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHONE_DETAILSPHONE", Storage="_DETAILSPHONEs", ThisKey="PhoneID", OtherKey="PhoneID")]
		public EntitySet<DETAILSPHONE> DETAILSPHONEs
		{
			get
			{
				return this._DETAILSPHONEs;
			}
			set
			{
				this._DETAILSPHONEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BRAND_PHONE", Storage="_BRAND", ThisKey="BrandID", OtherKey="BrandID", IsForeignKey=true)]
		public BRAND BRAND
		{
			get
			{
				return this._BRAND.Entity;
			}
			set
			{
				BRAND previousValue = this._BRAND.Entity;
				if (((previousValue != value) 
							|| (this._BRAND.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BRAND.Entity = null;
						previousValue.PHONEs.Remove(this);
					}
					this._BRAND.Entity = value;
					if ((value != null))
					{
						value.PHONEs.Add(this);
						this._BrandID = value.BrandID;
					}
					else
					{
						this._BrandID = default(string);
					}
					this.SendPropertyChanged("BRAND");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_COMMENTs(COMMENT entity)
		{
			this.SendPropertyChanging();
			entity.PHONE = this;
		}
		
		private void detach_COMMENTs(COMMENT entity)
		{
			this.SendPropertyChanging();
			entity.PHONE = null;
		}
		
		private void attach_DETAILSPHONEs(DETAILSPHONE entity)
		{
			this.SendPropertyChanging();
			entity.PHONE = this;
		}
		
		private void detach_DETAILSPHONEs(DETAILSPHONE entity)
		{
			this.SendPropertyChanging();
			entity.PHONE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RESPONECOMMENT")]
	public partial class RESPONECOMMENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ResponeCommentID;
		
		private string _Body;
		
		private string _Datetimestamp;
		
		private string _CommentID;
		
		private EntityRef<COMMENT> _COMMENT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnResponeCommentIDChanging(string value);
    partial void OnResponeCommentIDChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnDatetimestampChanging(string value);
    partial void OnDatetimestampChanged();
    partial void OnCommentIDChanging(string value);
    partial void OnCommentIDChanged();
    #endregion
		
		public RESPONECOMMENT()
		{
			this._COMMENT = default(EntityRef<COMMENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResponeCommentID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ResponeCommentID
		{
			get
			{
				return this._ResponeCommentID;
			}
			set
			{
				if ((this._ResponeCommentID != value))
				{
					this.OnResponeCommentIDChanging(value);
					this.SendPropertyChanging();
					this._ResponeCommentID = value;
					this.SendPropertyChanged("ResponeCommentID");
					this.OnResponeCommentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Body
		{
			get
			{
				return this._Body;
			}
			set
			{
				if ((this._Body != value))
				{
					this.OnBodyChanging(value);
					this.SendPropertyChanging();
					this._Body = value;
					this.SendPropertyChanged("Body");
					this.OnBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Datetimestamp", DbType="VarChar(11) NOT NULL", CanBeNull=false)]
		public string Datetimestamp
		{
			get
			{
				return this._Datetimestamp;
			}
			set
			{
				if ((this._Datetimestamp != value))
				{
					this.OnDatetimestampChanging(value);
					this.SendPropertyChanging();
					this._Datetimestamp = value;
					this.SendPropertyChanged("Datetimestamp");
					this.OnDatetimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommentID", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string CommentID
		{
			get
			{
				return this._CommentID;
			}
			set
			{
				if ((this._CommentID != value))
				{
					if (this._COMMENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCommentIDChanging(value);
					this.SendPropertyChanging();
					this._CommentID = value;
					this.SendPropertyChanged("CommentID");
					this.OnCommentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="COMMENT_RESPONECOMMENT", Storage="_COMMENT", ThisKey="CommentID", OtherKey="CommentID", IsForeignKey=true)]
		public COMMENT COMMENT
		{
			get
			{
				return this._COMMENT.Entity;
			}
			set
			{
				COMMENT previousValue = this._COMMENT.Entity;
				if (((previousValue != value) 
							|| (this._COMMENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._COMMENT.Entity = null;
						previousValue.RESPONECOMMENTs.Remove(this);
					}
					this._COMMENT.Entity = value;
					if ((value != null))
					{
						value.RESPONECOMMENTs.Add(this);
						this._CommentID = value.CommentID;
					}
					else
					{
						this._CommentID = default(string);
					}
					this.SendPropertyChanged("COMMENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SUPPLIER")]
	public partial class SUPPLIER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SupplierID;
		
		private string _SupplierName;
		
		private string _PhoneNO;
		
		private string _Address;
		
		private EntitySet<WAREHOUSERECEIPT> _WAREHOUSERECEIPTs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSupplierIDChanging(string value);
    partial void OnSupplierIDChanged();
    partial void OnSupplierNameChanging(string value);
    partial void OnSupplierNameChanged();
    partial void OnPhoneNOChanging(string value);
    partial void OnPhoneNOChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    #endregion
		
		public SUPPLIER()
		{
			this._WAREHOUSERECEIPTs = new EntitySet<WAREHOUSERECEIPT>(new Action<WAREHOUSERECEIPT>(this.attach_WAREHOUSERECEIPTs), new Action<WAREHOUSERECEIPT>(this.detach_WAREHOUSERECEIPTs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierID", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SupplierID
		{
			get
			{
				return this._SupplierID;
			}
			set
			{
				if ((this._SupplierID != value))
				{
					this.OnSupplierIDChanging(value);
					this.SendPropertyChanging();
					this._SupplierID = value;
					this.SendPropertyChanged("SupplierID");
					this.OnSupplierIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SupplierName", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string SupplierName
		{
			get
			{
				return this._SupplierName;
			}
			set
			{
				if ((this._SupplierName != value))
				{
					this.OnSupplierNameChanging(value);
					this.SendPropertyChanging();
					this._SupplierName = value;
					this.SendPropertyChanged("SupplierName");
					this.OnSupplierNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNO", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string PhoneNO
		{
			get
			{
				return this._PhoneNO;
			}
			set
			{
				if ((this._PhoneNO != value))
				{
					this.OnPhoneNOChanging(value);
					this.SendPropertyChanging();
					this._PhoneNO = value;
					this.SendPropertyChanged("PhoneNO");
					this.OnPhoneNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SUPPLIER_WAREHOUSERECEIPT", Storage="_WAREHOUSERECEIPTs", ThisKey="SupplierID", OtherKey="SupplierID")]
		public EntitySet<WAREHOUSERECEIPT> WAREHOUSERECEIPTs
		{
			get
			{
				return this._WAREHOUSERECEIPTs;
			}
			set
			{
				this._WAREHOUSERECEIPTs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WAREHOUSERECEIPTs(WAREHOUSERECEIPT entity)
		{
			this.SendPropertyChanging();
			entity.SUPPLIER = this;
		}
		
		private void detach_WAREHOUSERECEIPTs(WAREHOUSERECEIPT entity)
		{
			this.SendPropertyChanging();
			entity.SUPPLIER = null;
		}
	}
}
#pragma warning restore 1591
